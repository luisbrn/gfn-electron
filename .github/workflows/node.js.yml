# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master, steam-rpc-feature]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Record job start time
        run: date +%s > /tmp/job_start
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Record install start time
        run: date +%s > /tmp/install_start
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --progress=false
      - name: Record install end time and show duration
        run: |
          date +%s > /tmp/install_end
          if [ -f /tmp/install_start ]; then
            start=$(cat /tmp/install_start)
            end=$(cat /tmp/install_end)
            echo "install_seconds=$((end-start))"
          else
            echo "install_end recorded"
          fi
      - name: Audit dependencies (non-blocking)
        run: npm audit --audit-level=moderate || true
      - name: Lint
        run: npm run lint --if-present
      - name: Format check
        run: npm run format:check --if-present
      - name: Test (unit) — fast
        run: |
          npm run ci:fast --if-present
      - name: Test (integration) — optional slow tests
        if: env.RUN_SLOW_TESTS == 'true'
        run: |
          npm run test --if-present
      - name: Build
        run: npm run build --if-present
      - name: Coverage
        run: |
          npx jest --coverage --runInBand
      - name: Ensure coverage directory exists
        run: |
          mkdir -p coverage
          echo "coverage dir ensured"
      - name: Show coverage files
        run: ls -la coverage || true
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/**/lcov.info
          fail_ci_if_error: false
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-dir
          path: coverage/
